@{
    Layout = "~/_SiteLayout.cshtml";
    Page.Title = "League Management";  
}

<!DOCTYPE html>

<html lang="en">
    <head>
        <meta charset="utf-8" />
        <title>
        </title>
    </head>
    <body>
<div class="container" style="background-color: #bcd4f1; width: 100%">
    <hgroup class="title">
        <h1>@Page.Title</h1>
    </hgroup>

    <div class="panel-body"> 
                                <p><b>The first layer that needs to be added is the league.  League Manager allows the adminstrator to add, edit or delete leagues from the curling club.  All current leagues have been added.  Please check the table below to ensure that the league administrator contact information is correct.</b></p>
        <ol>
            <li><b>Click Edit to change the Contact, email or phone number of the League Administrator.</b></li>
            <li><b>If you are adding a new league, click the Add League button at the bottom of the table.  A form will appear to enter the details of the league.</b></li>
            <li><b>Pressing Delete will delete the selected league from the curling club.</b></li>
            <li><b>The next step is to add teams to the league by clicking on <a style="color: #0026ff" href="/Admin Tools/Team Input">Team Management</a></b></li>
            
        </ol> 
        <div id="jqxgrid"></div>

            <div style="margin-top: 30px;">
                <input id="addrowbutton" type="button" value="Add League" />
                <div id="cellbegineditevent"></div>
                <div style="margin-top: 10px;" id="cellendeditevent"></div>
        </div>
    </div>
</div>

<div id="addpopupWindow">
    <div>Add League</div>
    <div style="overflow: hidden;">
        
            <p id="addleagueP">Leagues
                <input style="color: #0026ff" id="addleague" name="leagueList"></p>
            <p id="addnameP">League Admin Name
                <input style="color: #0026ff" id="addname" name="nameList"></p>
            <p id="addemailP">League Admin email
                <input style="color: #0026ff" id="addemail" name="emailList"></p>
            <p id="addphoneP">League Admin Phone
                <input style="color: #0026ff" id="addphone" name="phoneList"></p>

            <p style="padding-top: 10px; color: #000"><input style="margin-right: 5px;" type="Button" id="addB" class="save-team edit-mode" value="Add League" /><input id="Cancel" type="button" value="Cancel" /></p>
    </div>
</div>

<div id="editpopupWindow">
    <div>Edit League</div>
        <div style="overflow: hidden;">
            <p id="editleagueP">Leagues
                <input style="color: #0026ff" id="editleague" name="leagueList"></p>
            <p id="editnameP">League Admin Name
                <input style="color: #0026ff" id="editname" name="nameList"></p>
            <p id="editemailP">League Admin email
                <input style="color: #0026ff" id="editemail" name="emailList"></p>
            <p id="editphoneP">League Admin Phone
                <input style="color: #0026ff" id="editphone" name="phoneList"></p>
            <p style="padding-top: 10px; color: #000"><input style="margin-right: 5px;" type="button" id="editB" class="save-team edit-mode" value="Save" /><input id="Cancel" type="button" value="Cancel" /></p>
        </div>
</div>
<div id="delpopupWindow">
    <div>Delete League</div>
        <div style="overflow: hidden;">
            <p id="delleagueP">Leagues
                <input style="color: #0026ff" id="delleague" name="leagueList"></p>
                <p style="padding-top: 10px; color: #000"><input style="margin-right: 5px;" type="button" id="delB" class="save-team edit-mode" value="Confirm Delete" /><input id="Cancel" type="button" value="Cancel" /></p>
        </div>
</div>
 

        </form>  
        
    </body>
</html>
<script>
    $(document).ready(function () {
        // Start by setting up some javascript variables that refer to the HTML elements        


        // Hide the html elements for now and show them when we need them



        // Call the GetLeague function to get a list of the leagues from the League_tbl
        var source = {
            datatype: "json",
            datafields: [{ name: 'League_Name', type: 'string' },
                                    { name: 'League_Admin', type: 'string' },
                                    { name: 'League_Admin_Email', type: 'email' },
                                    { name: 'League_Admin_Phone', type: 'phone'}],
            id: 'League_ID',
            url: '/Services/GetLeague.cshtml/',
            async: true
        };
        console.log(source);
        var dataAdapter = new $.jqx.dataAdapter(source);
        $("#jqxgrid").jqxGrid({
            width: '100%',
            autoheight: true,
            altrows: true,
            source: dataAdapter,
            selectionmode: 'checkbox',
            selectionmode: 'singlecell',
            columns: [{ text: 'League', datafield: 'League_Name', textcolor: 'blue', width: '20%' },
                                { text: 'Contact', datafield: 'League_Admin', width: '20%' },
                                { text: 'email', datafield: 'League_Admin_Email', width: '20%' },
                                { text: 'Phone', datafield: 'League_Admin_Phone', width: '20%' },
                                { text: '', datafield: 'Edit', columntype: 'button', width: '10%', cellsrenderer: function () {
                                    return "Edit";
                                }, buttonclick: function (row) {
                                    console.log("Entering Edit Mode")
                                    // open the popup window when the user clicks a button.
                                    editrow = row;

                                    var offset = $("#jqxgrid").offset();
                                    $("#editpopupWindow").jqxWindow({ position: { x: parseInt(offset.left) + 60, y: parseInt(offset.top) - 300} });
                                    // get the clicked row's data and initialize the input fields.
                                    var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', editrow);
                                    console.info(dataRecord)

                                    $("#editleague").val(dataRecord.League_Name);
                                    $("#editname").val(dataRecord.League_Admin);
                                    $("#editemail").val(dataRecord.League_Admin_Email);
                                    $("#editphone").val(dataRecord.League_Admin_Phone);
                                    // show the popup window.
                                    $("#editpopupWindow").jqxWindow('open');
                                }
                                },
                                { text: '', datafield: 'Delete', columntype: 'button', width: '10%', cellsrenderer: function () {
                                    return "Delete";
                                }, buttonclick: function (row) {
                                    console.log("Entering Delete Mode")
                                    // open the popup window when the user clicks a button.
                                    editrow = row;
                                    var offset = $("#jqxgrid").offset();
                                    $("#delpopupWindow").jqxWindow({ position: { x: parseInt(offset.left) + 60, y: parseInt(offset.top) - 300} });
                                    // get the clicked row's data and initialize the input fields.
                                    var dataRecord = $("#jqxgrid").jqxGrid('getrowdata', editrow);
                                    $("#delleague").val(dataRecord.League_Name);

                                    // show the popup window.
                                    $("#delpopupWindow").jqxWindow('open');
                                }
                                }
                                            ]
        });


        $("#addpopupWindow").jqxWindow({
            width: 350, resizable: false, isModal: true, autoOpen: false, cancelButton: $("#Cancel"), modalOpacity: 0.01
        });
        $("#addpopupWindow").on('open', function () {
            $("#addleague").jqxInput('selectAll');
        });
        $("#editpopupWindow").jqxWindow({
            width: 350, resizable: false, isModal: true, autoOpen: false, cancelButton: $("#Cancel"), modalOpacity: 0.01
        });
        $("#editpopupWindow").on('open', function () {
            $("#editleague").jqxInput('selectAll');
        });
        $("#delpopupWindow").jqxWindow({
            width: 350, resizable: false, isModal: true, autoOpen: false, cancelButton: $("#Cancel"), modalOpacity: 0.01
        });
        $("#delpopupWindow").on('open', function () {
            $("#delleague").jqxInput('selectAll');
        });

        // Add League function

        $("#addrowbutton").jqxButton({
            height: 30
        });

        $("#addrowbutton").on('click', function () {
            console.log("Entering Add League Function")
            var leagueSelect = $("#addleague");
            var nameSelect = $("#addname");
            var emailSelect = $("#addemail");
            var phoneSelect = $("#addphone");

            leagueSelect.attr('disabled', false);
            leagueSelect.empty();

            nameSelect.attr('disabled', false);
            nameSelect.empty();

            emailSelect.attr('disabled', false);
            emailSelect.empty();

            phoneSelect.attr('disabled', false);
            phoneSelect.empty();

            var offset = $("#jqxgrid").offset();
            $("#addpopupWindow").jqxWindow({ position: { x: parseInt(offset.left) + 10, y: parseInt(offset.top) + 0} });
            $("#addpopupWindow").jqxWindow('open');


            $('#addB').click(function () {

/*                var timerow = { addtime: $("#addtime").val() };
                console.info(timerow);

                var times = timerow.addtime.split(', ');

                $.each(times, function (i, val) {
                    console.log(i + ": " + val); */
                    var row = { addleague: $("#addleague").val(), addname: $("#addname").val(), addemail: $("#addemail").val(), addphone: $("#addphone").val() };

                    console.info(row);

                    $.post("/Services/Postleague/", row, function (league, status) {
                        alert("League Add was a " + status)
                        console.log(league);
                        location.replace("League Input.cshtml")
                    }, "json");

/*                }); */
            });
        });

        // Save league function called by Edit Button
        $("#editB").click(function () {
            console.log("Entering Save Function")
            if (editrow >= 0) {
                var row = {
                    league: $("#editleague").val(), name: $("#editname").val(), email: $("#editemail").val(), phone: $("#editphone").val()
                };
                var rowID = $('#jqxgrid').jqxGrid('getrowid', editrow);
                console.log("rowID = " + rowID)
                $('#jqxgrid').jqxGrid('updaterow', rowID, row);
                console.log("rowID= " + rowID)
                console.log("row= " + row.name)

                $.post("/Services/EditLeague.cshtml/",
                           {
                               UID: rowID,
                               League: row.league,
                               Name: row.name,
                               Phone: row.phone,
                               Email: row.email
                           }
                           , function (player, status) {
                               console.log(player)
                               alert("League Update was a " + status)
                               $('#playerList').hide();
                               location.replace("League Input.cshtml")
                           }, "json");

                $("#editpopupWindow").jqxWindow('hide');
            }
        });
        // Delete league function called by Delete Button
        $("#delB").click(function () {
            console.log("Entering Delete Function")
            if (editrow >= 0) {
                var row = { name: $("#delname").val(), position: $("#delposition").val(), phonenumber: $("#delphonenumber").val(), email: $("#delemail").val()
                };
                var rowID = $('#jqxgrid').jqxGrid('getrowid', editrow);
                console.info(rowID);
                $('#jqxgrid').jqxGrid('updaterow', rowID, row);

                $.post("/Services/DeleteLeague.cshtml/",
                           {
                               UID: rowID,
                               Position: row.position,
                               Name: row.name,
                               Phone_Type: row.phonetype,
                               Phone_Number: row.phonenumber,
                               Email: row.email
                           }
                           , function (player, status) {
                               console.log(player)
                               alert("League Delete was a " + status)
                               $('#playerList').hide();
                               location.replace("League Input.cshtml")
                           }, "json");

                $("#delpopupWindow").jqxWindow('hide');
            }
        });



    });
</script>